@page "/estudiantes/nueva"
@page "/estudiantes/editar/{Id:int}"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioEstudiantes _repositorio;
@inject IRepositorioClases _repositorioClases;

<h2>@_mensaje Estudiante</h2>
<EditForm Model="_estudiante" FormName="frmEstudiante" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="row mb-3">
        <label for="txtNombre" class="col-2 col-form-label">Nombre</label>
        <div class="col-10">
            <InputText id="txtNombre" class="form-control" @bind-Value="_estudiante.Nombre" />
            <ValidationMessage For="()=>_estudiante.Nombre" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtCorreo" class="col-2 col-form-label">Correo</label>
        <div class="col-10">
            <InputText id="txtCorreo" class="form-control" @bind-Value="_estudiante.Correo" />
            <ValidationMessage For="()=>_estudiante.Correo" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtTelefono" class="col-2 col-form-label">Teléfono</label>
        <div class="col-10">
            <InputText id="txtTelefono" class="form-control" @bind-Value="_estudiante.Telefono" />
            <ValidationMessage For="()=>_estudiante.Telefono" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtClases" class="col-sm-2 col-form-label">Clases</label>
        <div class="col-sm-10">
            <div class="form-group">
                @foreach (Clase clase in _clases)
                {
                    <div class="form-check">
                        <input class="form-check-input"
                               type="checkbox"
                               id="checkbox-@clase.Id"
                               @onchange="e => OnCheckboxChanged(e, clase.Id)"
                               checked="@_clasesIdSeleccionados.Contains(clase.Id)" />

                        <label class="form-check-label" for="checkbox-@clase.Id">
                            @($"{clase.Idioma.Nombre} - {clase.Maestro.Nombre} - {clase.Nivel} ({clase.Horario})")
                        </label>
                    </div>
                }
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
    <button class="btn btn-danger ms-3" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private string _mensaje = "";
    private Estudiante? _estudiante = new();
    private List<Clase> _clases = new();
    private List<int> _clasesIdSeleccionados = new();

    protected override async Task OnInitializedAsync()
    {
        _clases = await _repositorioClases.GetAll();

        if (Id > 0)
        {
            _estudiante = await _repositorio.GetById(Id);
            _mensaje = "Modificar";

            if (_estudiante?.Clases != null)
            {
                _clasesIdSeleccionados = _estudiante.Clases.Select(c => c.Id).ToList();
            }
        }
        else
        {
            _mensaje = "Nuevo";
        }
    }

    private async void Guardar()
    {
        _estudiante.Clases = new List<Clase>();
        foreach (int id in _clasesIdSeleccionados)
        {
            var clase = await _repositorioClases.GetById(id);
            if (clase != null)
            {
                _estudiante.Clases.Add(clase);
            }
        }
        if (Id > 0)
        {
            await _repositorio.Update(_estudiante!);
        }
        else
        {
            _estudiante!.Fecha = DateTime.Now; 
            await _repositorio.Add(_estudiante!);
        }
        Cancelar();
    }

    private void Cancelar()
    {
        _navigator.NavigateTo("/estudiantes");
    }

    private void OnCheckboxChanged(ChangeEventArgs e, int id)
    {
        bool isChecked = (bool)e.Value;

        if (isChecked)
        {
            if (!_clasesIdSeleccionados.Contains(id))
                _clasesIdSeleccionados.Add(id);
        }
        else
        {
            _clasesIdSeleccionados.Remove(id);
        }
    }
}