@page "/clases/nueva"
@page "/clases/editar/{Id:int}"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Forms

@inject NavigationManager Navigation
@inject IRepositorioIdiomas RepoIdiomas
@inject IRepositorioMaestros RepoMaestros
@inject IRepositorioClases RepoClases

<h3>@Titulo Clase</h3>

<EditForm Model="ClaseActual" OnValidSubmit="GuardarClase">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label class="form-label">Idioma</label>
        <InputSelect class="form-control" @bind-Value="ClaseActual.IdiomaId">
            <option value="0"> Seleccione idioma </option>
            @foreach (var idioma in IdiomasDisponibles)
            {
                <option value="@idioma.Id">@idioma.Nombre</option>
            }
        </InputSelect>
    </div>

    <div class="mb-3">
        <label class="form-label">Maestro</label>
        <div class="input-group">
            <InputSelect @bind-Value="ClaseActual.MaestroId" class="form-control">
                <option value="0"> Seleccione un maestro </option>
                @if (MaestrosFiltrados != null)
                {
                    @foreach (var maestro in MaestrosFiltrados)
                    {
                        <option value="@maestro.Id">@($"{maestro.Nombre} - {maestro.Idioma.Nombre}")</option>
                    }
                }
            </InputSelect>
            <button type="button" class="btn btn-outline-secondary" @onclick="CargarMaestros">
                <i class="bi bi-arrow-clockwise"></i>
            </button>
        </div>
    </div>


    <div class="mb-3">
        <label class="form-label">Nivel</label>
        <InputText class="form-control" @bind-Value="ClaseActual.Nivel" />
    </div>

    <div class="mb-3">
        <label class="form-label">Horario</label>
        <InputText class="form-control" @bind-Value="ClaseActual.Horario" />
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    private string Titulo = "Nueva";
    private Clase ClaseActual = new();
    private List<Idioma> IdiomasDisponibles = new();
    private List<Maestro> MaestrosFiltrados = new();

    protected override async Task OnInitializedAsync()
    {
        IdiomasDisponibles = await RepoIdiomas.GetAll();

        if (Id > 0)
        {
            Titulo = "Editar";
            ClaseActual = await RepoClases.GetById(Id);
            await CargarMaestros();
        }
    }

    private async Task CargarMaestros()
    {
        if (ClaseActual.IdiomaId > 0)
        {
            MaestrosFiltrados = await RepoMaestros.GetByIdiomaId(ClaseActual.IdiomaId);
            StateHasChanged();
        }
        else
        {
            MaestrosFiltrados = new List<Maestro>();
        }
    }

    private async Task GuardarClase()
    {
        if (Id > 0)
            await RepoClases.Update(ClaseActual);
        else
            await RepoClases.Add(ClaseActual);

        Navigation.NavigateTo("/");
    }

    private void Cancelar()
    {
        Navigation.NavigateTo("/");
    }
}