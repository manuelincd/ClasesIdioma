// <auto-generated />
using System;
using ClasesIdioma.Modelos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClasesIdioma.Migrations
{
    [DbContext(typeof(ClasesIdiomaDBContext))]
    [Migration("20250519001148_AgregarRelacionIdiomaMaestros")]
    partial class AgregarRelacionIdiomaMaestros
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClaseEstudiante", b =>
                {
                    b.Property<int>("ClasesId")
                        .HasColumnType("int");

                    b.Property<int>("EstudiantesId")
                        .HasColumnType("int");

                    b.HasKey("ClasesId", "EstudiantesId");

                    b.HasIndex("EstudiantesId");

                    b.ToTable("ClaseEstudiante");
                });

            modelBuilder.Entity("ClasesIdioma.Modelos.Clase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Horario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdiomaId")
                        .HasColumnType("int");

                    b.Property<int>("MaestroId")
                        .HasColumnType("int");

                    b.Property<int?>("MaestroId1")
                        .HasColumnType("int");

                    b.Property<string>("Nivel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdiomaId");

                    b.HasIndex("MaestroId");

                    b.HasIndex("MaestroId1");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("ClasesIdioma.Modelos.Estudiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("ClasesIdioma.Modelos.Idioma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Idiomas");
                });

            modelBuilder.Entity("ClasesIdioma.Modelos.Maestro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdiomaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("IdiomaId");

                    b.ToTable("Maestros");
                });

            modelBuilder.Entity("ClaseEstudiante", b =>
                {
                    b.HasOne("ClasesIdioma.Modelos.Clase", null)
                        .WithMany()
                        .HasForeignKey("ClasesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClasesIdioma.Modelos.Estudiante", null)
                        .WithMany()
                        .HasForeignKey("EstudiantesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClasesIdioma.Modelos.Clase", b =>
                {
                    b.HasOne("ClasesIdioma.Modelos.Idioma", "Idioma")
                        .WithMany("Clases")
                        .HasForeignKey("IdiomaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClasesIdioma.Modelos.Maestro", "Maestro")
                        .WithMany()
                        .HasForeignKey("MaestroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClasesIdioma.Modelos.Maestro", null)
                        .WithMany("Clases")
                        .HasForeignKey("MaestroId1");

                    b.Navigation("Idioma");

                    b.Navigation("Maestro");
                });

            modelBuilder.Entity("ClasesIdioma.Modelos.Maestro", b =>
                {
                    b.HasOne("ClasesIdioma.Modelos.Idioma", "Idioma")
                        .WithMany("Maestros")
                        .HasForeignKey("IdiomaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Idioma");
                });

            modelBuilder.Entity("ClasesIdioma.Modelos.Idioma", b =>
                {
                    b.Navigation("Clases");

                    b.Navigation("Maestros");
                });

            modelBuilder.Entity("ClasesIdioma.Modelos.Maestro", b =>
                {
                    b.Navigation("Clases");
                });
#pragma warning restore 612, 618
        }
    }
}
